{"ast":null,"code":"var _jsxFileName = \"/Users/luna.c/Documents/GitHub/seekr/src/components/JobCard.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport data from '../data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobCard = () => {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  useEffect(() => {\n    setJobs(data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-cards\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search...\",\n          onChange: e => setFilteredJobs(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), jobs.filter(job => {\n      // const includesTitle= job.position.toLowerCase().includes(filteredJobs.toLowerCase());\n      if (includesTitle) {\n        return job;\n      }\n    }).map((job, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: job.logo,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-top-description\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: job.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"new\",\n              children: job.new ? 'NEW' : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"featured\",\n              children: job.featured ? 'FEATURED' : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: job.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-bottom-description\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: job.postedAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: job.contract\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: job.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: job.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: job.level\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), job.languages.map((tag, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: tag\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 50\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JobCard, \"Y4YFqUASYH12V9XWGU7vT3JDTKE=\");\n\n_c = JobCard;\nexport default JobCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobCard\");","map":{"version":3,"sources":["/Users/luna.c/Documents/GitHub/seekr/src/components/JobCard.jsx"],"names":["useEffect","useState","data","JobCard","jobs","setJobs","filteredJobs","setFilteredJobs","e","target","value","filter","job","includesTitle","map","id","logo","company","new","featured","position","postedAt","contract","location","role","level","languages","tag","index"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport data from '../data.json'\n\nconst JobCard = () => {\n  const [jobs, setJobs] = useState([])\n  const [filteredJobs, setFilteredJobs] = useState([])\n\n  useEffect(() => {\n    setJobs(data)\n  }, [])\n\n  return (\n    <div className='job-cards'>\n      <div className='search-form'>\n      <form action=\"submit\">\n        <input type=\"text\" placeholder='Search...' onChange={(e) => setFilteredJobs(e.target.value)} />\n      </form>\n    </div>\n      {jobs.filter(job => {\n        // const includesTitle= job.position.toLowerCase().includes(filteredJobs.toLowerCase());\n\n        if (includesTitle) {\n        return job\n        }\n      })\n      .map((job, id) => {\n        return (\n          <div className='job' key={id}>\n            <img className='logo' src={job.logo} alt=\"\" />\n            <div className='job-center'>\n              <div className='job-top-description'>\n                <p>{job.company}</p>\n                <p className='new'>{job.new ? 'NEW' : null}</p>\n                <p className='featured'>{job.featured ? 'FEATURED' : null}</p>\n              </div>\n              <h1>{job.position}</h1>\n              <div className='job-bottom-description'>\n                <p>{job.postedAt}</p>\n                <p>•</p>\n                <p>{job.contract}</p>\n                <p>•</p>\n                <p>{job.location}</p>\n              </div>\n            </div>\n            <div className='tags'>\n              <p>{job.role}</p>\n              <p>{job.level}</p>\n              {job.languages.map((tag, index) => <p key={index}>{tag}</p>)}\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default JobCard"]},"metadata":{},"sourceType":"module"}