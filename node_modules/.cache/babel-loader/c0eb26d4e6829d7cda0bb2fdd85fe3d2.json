{"ast":null,"code":"import _slicedToArray from\"/Users/luna.c/Documents/GitHub/seekr/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import data from'../data.json';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var JobCard=function JobCard(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),jobs=_useState2[0],setJobs=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),filteredJobs=_useState4[0],setFilteredJobs=_useState4[1];useEffect(function(){setJobs(data);},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"job-cards\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-form\",children:/*#__PURE__*/_jsx(\"form\",{action:\"submit\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search...\",onChange:function onChange(e){return setFilteredJobs(e.target.value);}})})}),jobs.filter(function(job){var includesTitle=job.position.toLowerCase().includes(filteredJobs.toLowerCase());var includesLevel=job.level.toLowerCase().includes(filteredJobs.toLowerCase());if(filteredJobs===''){return job;}if(includesLevel||includesTitle){return job;}}).map(function(job,id){return/*#__PURE__*/_jsxs(\"div\",{className:\"job\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"logo\",src:job.logo,alt:\"\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"job-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"job-top-description\",children:[/*#__PURE__*/_jsx(\"p\",{children:job.company}),/*#__PURE__*/_jsx(\"p\",{className:\"new\",children:job.new?'NEW':null}),/*#__PURE__*/_jsx(\"p\",{className:\"featured\",children:job.featured?'FEATURED':null})]}),/*#__PURE__*/_jsx(\"h1\",{children:job.position}),/*#__PURE__*/_jsxs(\"div\",{className:\"job-bottom-description\",children:[/*#__PURE__*/_jsx(\"p\",{children:job.postedAt}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022\"}),/*#__PURE__*/_jsx(\"p\",{children:job.contract}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022\"}),/*#__PURE__*/_jsx(\"p\",{children:job.location})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tags\",children:[/*#__PURE__*/_jsx(\"p\",{children:job.role}),/*#__PURE__*/_jsx(\"p\",{children:job.level}),job.languages.map(function(tag,index){return/*#__PURE__*/_jsx(\"p\",{children:tag},index);})]})]},id);})]});};export default JobCard;","map":{"version":3,"sources":["/Users/luna.c/Documents/GitHub/seekr/src/components/JobCard.jsx"],"names":["useEffect","useState","data","JobCard","jobs","setJobs","filteredJobs","setFilteredJobs","e","target","value","filter","job","includesTitle","position","toLowerCase","includes","includesLevel","level","map","id","logo","company","new","featured","postedAt","contract","location","role","languages","tag","index"],"mappings":"0HAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,cAAwBF,QAAQ,CAAC,EAAD,CAAhC,wCAAOG,IAAP,eAAaC,OAAb,eACA,eAAwCJ,QAAQ,CAAC,EAAD,CAAhD,yCAAOK,YAAP,eAAqBC,eAArB,eAEAP,SAAS,CAAC,UAAM,CACdK,OAAO,CAACH,IAAD,CAAP,CACD,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,YAAK,SAAS,CAAC,aAAf,uBACA,aAAM,MAAM,CAAC,QAAb,uBACE,cAAO,IAAI,CAAC,MAAZ,CAAmB,WAAW,CAAC,WAA/B,CAA2C,QAAQ,CAAE,kBAACM,CAAD,QAAOD,CAAAA,eAAe,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtB,EAArD,EADF,EADA,EADF,CAMGN,IAAI,CAACO,MAAL,CAAY,SAAAC,GAAG,CAAI,CAClB,GAAMC,CAAAA,aAAa,CAAED,GAAG,CAACE,QAAJ,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCV,YAAY,CAACS,WAAb,EAApC,CAArB,CACA,GAAME,CAAAA,aAAa,CAAGL,GAAG,CAACM,KAAJ,CAAUH,WAAV,GAAwBC,QAAxB,CAAiCV,YAAY,CAACS,WAAb,EAAjC,CAAtB,CAEA,GAAIT,YAAY,GAAK,EAArB,CAAyB,CACvB,MAAOM,CAAAA,GAAP,CACD,CACD,GAAIK,aAAa,EAAIJ,aAArB,CAAoC,CAClC,MAAOD,CAAAA,GAAP,CACD,CACF,CAVA,EAWAO,GAXA,CAWI,SAACP,GAAD,CAAMQ,EAAN,CAAa,CAChB,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,YAAK,SAAS,CAAC,MAAf,CAAsB,GAAG,CAAER,GAAG,CAACS,IAA/B,CAAqC,GAAG,CAAC,EAAzC,EADF,cAEE,aAAK,SAAS,CAAC,YAAf,wBACE,aAAK,SAAS,CAAC,qBAAf,wBACE,mBAAIT,GAAG,CAACU,OAAR,EADF,cAEE,UAAG,SAAS,CAAC,KAAb,UAAoBV,GAAG,CAACW,GAAJ,CAAU,KAAV,CAAkB,IAAtC,EAFF,cAGE,UAAG,SAAS,CAAC,UAAb,UAAyBX,GAAG,CAACY,QAAJ,CAAe,UAAf,CAA4B,IAArD,EAHF,GADF,cAME,oBAAKZ,GAAG,CAACE,QAAT,EANF,cAOE,aAAK,SAAS,CAAC,wBAAf,wBACE,mBAAIF,GAAG,CAACa,QAAR,EADF,cAEE,6BAFF,cAGE,mBAAIb,GAAG,CAACc,QAAR,EAHF,cAIE,6BAJF,cAKE,mBAAId,GAAG,CAACe,QAAR,EALF,GAPF,GAFF,cAiBE,aAAK,SAAS,CAAC,MAAf,wBACE,mBAAIf,GAAG,CAACgB,IAAR,EADF,cAEE,mBAAIhB,GAAG,CAACM,KAAR,EAFF,CAGGN,GAAG,CAACiB,SAAJ,CAAcV,GAAd,CAAkB,SAACW,GAAD,CAAMC,KAAN,qBAAgB,mBAAgBD,GAAhB,EAAQC,KAAR,CAAhB,EAAlB,CAHH,GAjBF,GAA0BX,EAA1B,CADF,CAyBD,CArCA,CANH,GADF,CA+CD,CAvDD,CAyDA,cAAejB,CAAAA,OAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport data from '../data.json'\n\nconst JobCard = () => {\n  const [jobs, setJobs] = useState([])\n  const [filteredJobs, setFilteredJobs] = useState('')\n\n  useEffect(() => {\n    setJobs(data)\n  }, [])\n\n  return (\n    <div className='job-cards'>\n      <div className='search-form'>\n      <form action=\"submit\">\n        <input type=\"text\" placeholder='Search...' onChange={(e) => setFilteredJobs(e.target.value)} />\n      </form>\n    </div>\n      {jobs.filter(job => {\n        const includesTitle= job.position.toLowerCase().includes(filteredJobs.toLowerCase());\n        const includesLevel = job.level.toLowerCase().includes(filteredJobs.toLowerCase());\n\n        if (filteredJobs === '') {\n          return job\n        }\n        if (includesLevel || includesTitle) {\n          return job\n        }\n      })\n      .map((job, id) => {\n        return (\n          <div className='job' key={id}>\n            <img className='logo' src={job.logo} alt=\"\" />\n            <div className='job-center'>\n              <div className='job-top-description'>\n                <p>{job.company}</p>\n                <p className='new'>{job.new ? 'NEW' : null}</p>\n                <p className='featured'>{job.featured ? 'FEATURED' : null}</p>\n              </div>\n              <h1>{job.position}</h1>\n              <div className='job-bottom-description'>\n                <p>{job.postedAt}</p>\n                <p>•</p>\n                <p>{job.contract}</p>\n                <p>•</p>\n                <p>{job.location}</p>\n              </div>\n            </div>\n            <div className='tags'>\n              <p>{job.role}</p>\n              <p>{job.level}</p>\n              {job.languages.map((tag, index) => <p key={index}>{tag}</p>)}\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default JobCard"]},"metadata":{},"sourceType":"module"}